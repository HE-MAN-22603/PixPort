# PixPort - Google Cloud Run Requirements
# Optimized for Flask deployment on Cloud Run with 2GB memory limit
# Python 3.11.9 compatible

# ===== Core Web Framework =====
Flask>=2.3.3,<4.0.0
Flask-Limiter>=3.5.0
Werkzeug>=2.3.7
gunicorn>=21.2.0

# ===== Image Processing (Essential) =====
Pillow>=10.0.0,<11.0.0
numpy>=1.24.3,<1.26.0

# ===== Background Removal - Cloud Run Optimized =====
# ONNX Runtime (CPU optimized for Cloud Run)
onnxruntime>=1.15.1,<1.17.0

# rembg for AI model management
rembg>=2.0.60,<3.0.0

# ===== Computer Vision =====
# OpenCV headless version for image processing
opencv-python-headless>=4.8.0.76,<4.9.0

# ===== System and Monitoring =====
psutil>=5.9.0,<6.0.0
requests>=2.28.0,<3.0.0
python-dotenv>=1.0.0,<2.0.0

# ===== Production Web Server =====
# Gunicorn for production WSGI server on Cloud Run

# ===== Optional Packages (Cloud Run has 2GB memory limit) =====
# Uncomment if needed - Cloud Run can handle these better than Railway

# Redis for caching
# redis>=4.5.0

# PDF generation
# reportlab>=4.0.0

# Advanced ONNX features
# onnx>=1.14.0

# ===== Memory Usage Estimates for Cloud Run =====
# Flask + dependencies: ~25MB
# Pillow: ~15MB
# NumPy: ~20MB
# ONNX Runtime: ~40MB
# OpenCV (headless): ~30MB
# rembg + dependencies: ~50MB
# AI models: ~100MB (multiple models supported)
# Working memory: ~200MB
# Total estimated: ~480MB (24% of Cloud Run's 2GB limit)

# ===== Cloud Run Deployment Benefits =====
# 1. 2GB memory limit (4x more than Railway's 512MB)
# 2. Better CPU allocation and performance
# 3. Automatic scaling based on traffic
# 4. Native Google Cloud integration
# 5. Support for larger AI models and processing
